For designing a Huffman tree, firstly, initializing 256 nodes, for each node containing a value of the amount of each character and two subnodes. In addition, counting the amount of characters has been completed before. Secondly, design a Min Heap to build a Binary Tree.
Sorting the minheap once the node put into the queue， maintaining the node having minimum value of amount in the head and the maximum in the tail. Thirdly, popping the first two nodes out of the minheap, combining to be a new node and computing the sum of amounts as the value of the new node. After that, the new node will be put in the minheap and sorted.
Repeating this process until the only one node inside the minheap, the node is the huffman tree that we need. Pop it.
igning a Huffman tree, firstly, initializing 256 nodes, for each node containing a value of the amount of each character and two subnodes. In addition, counting the amount of characters has been completed before. Secondly, design a Min Heap to build a Binary Tree.
Sorting the minheap once the node put into the queue， maintaining the node having minimum value of amount in the head and the maximum in the tail. Thirdly, popping the first two nodes out of the minheap, combining to be a new node and computing the sum of amounts as the value of the new node. After that, the new node will be put in the minheap and sorted.
Repeating this process until the only one node inside the minheap, the node is the huffman tree that we need. Pop it.

